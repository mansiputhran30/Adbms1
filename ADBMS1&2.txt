Partitions

Partition by range:

/*create table and add partitions*/
create table student
(
    RollNo number,
    name varchar2(10),
    DOB date,
    mobileno number,
    address varchar2(20),
    city varchar2(10),
    zipcode number
)
PARTITION BY RANGE(RollNo)
(
    Partition STUDENT_PART_A values less than (415),
    Partition STUDENT_PART_B values less than (430),
    Partition STUDENT_PART_C values less than (445)
);


/*insert data*/
insert into student values(101,'Mansi',TO_date('30/11/2001','DD/MM/YYYY'),8779117262,'Mira road','Mumbai',401107)
insert into Student values(419,'Sheetal',TO_date('08/10/2022','DD/MM/YYYY'),7544636389,'Borivali','Mumbai',401105);
insert into Student values(421,'Geetika',TO_date('06/10/2022','DD/MM/YYYY'),9453211753,'Dahisar','Mumbai',401111);
insert into Student values(435,'Sejal',TO_date('10/10/2022','DD/MM/YYYY'),8843274880,'Andheri','Mumbai',401110);


/*to display data in the table*/
select * from student;
/*add one more partition- alter*/
alter table student add partition STUDENT_PART_D values less than (460);


/*display partitions on table*/
select * from user_tab_partitions where table_name ='STUDENT';

/*display data from each partitions*/
select * from student partition (STUDENT_PART_B);

Partition by list:

/*create table using list partition*/
create table Salespart
(
    sales_id number,
    sales_person_name varchar2(20),
    DOB date,
    date_of_joining date,
    sales_person_region varchar2(20)
)
Partition by list(sales_person_region)
(
    Partition sales_east values('Manipur','Nagaland'),
    Partition sales_west values('Maharashtra','Gujarat'),
    Partition sales_north values('Kashmir','Himachal Pradesh'),
    Partition sales_south values('Karnataka','Kerala')
);

/*add a default partition in the table*/
alter table Salespart add partition sale_others values(DEFAULT);


RANKS

/*create table*/
create table emp
(
    empno number(4) CONSTRAINT pk_emp PRIMARY KEY,
    ename VARCHAR2(10),
    job VARCHAR2(9),
    mgr NUMBER(4),
    hiredate DATE,
    sal NUMBER(7,2),
    comm NUMBER(7,2),
    deptno NUMBER(2)
)

/*insert values*/
INSERT INTO emp VALUES (7369,'SMITH','CLERK',7902,to_date('17-12-1980','dd-mm-yyyy'),800,NULL,20);
INSERT INTO emp VALUES (7499,'ALLEN','SALESMAN',7698,to_date('20-2-1981','dd-mm-yyyy'),1600,300,30);
INSERT INTO emp VALUES (7521,'WARD','SALESMAN',7698,to_date('22-2-1981','dd-mm-yyyy'),1250,500,30);

/*Rank-partition-deptno, order by- sal   will skip the next rank when repetition occurs*/
select empno,deptno,sal, RANK() over(Partition by deptno order by sal) as MyRank from emp;

/*Dense Rank-partition-deptno, order by- sal will use the next rank when repetition occurs*/
select empno,deptno,sal, Dense_rank() over(Partition by deptno order by sal) as MyDenseRank from emp;

/*Find minimum salary-dept wise*/
select empno,deptno,sal, Min(sal) keep(Dense_rank FIRST order by sal) over(Partition by deptno) as LOWEST from emp;

/*Find maximum salary-dept wise*/
select empno,deptno,sal, Max(sal) keep(Dense_rank last order by sal) over(Partition by deptno) as HIGHEST from emp;


/*Display sal from previous row department wise*/
select deptno,empno,ename,job,sal, LAG(sal,1,0) over(Partition by deptno order by sal) as prev_sal from emp;



/*Display difference between current sal and previous sal-entire table*/
select empno,ename,job,sal, LAG(sal,1,0) over(order by sal) as Previous_sal, sal - LAG(sal,1,0) over(order by sal) as Differnce_between from emp;


/*Display sal from next row- dept wise*/
select deptno,empno,ename,job,sal, LEAD(sal,1,0) over(Partition by deptno order by sal) as next_sal from emp;

/*Display difference between current sal and next sal-entire table*/
select empno,ename,job,sal, LEAD(sal,1,0) over(order by sal) as Next_sal, LEAD(sal,1,0) over(order by sal) - sal as Differnce_between from emp;


/*rollup- entire table- for all employees*/
select deptno,job,count(*),sum(sal) from emp group by rollup(deptno,job);

/*cube- entire table- for all employees and for each job*/
select deptno,job,count(*),sum(sal) from emp group by cube(deptno,job);

/*display second highest rank from all deptno*/
select * from(select empno,ename,deptno,job,sal, RANK() over(Partition by deptno order by sal) as rank from emp) where rank=2;

/*Find maximum salary of clerks-dept wise*/
select empno,deptno,sal, Max(sal) keep(Dense_rank last order by sal) over(Partition by deptno) as HIGHEST from emp where job='CLERK';

/*Difference between lead and lag-dept wise*/
select empno,ename,deptno,job,LAG(sal,1,0) over(Partition by deptno order by sal) as prev_sal, LEAD(sal,1,0) over(Partition by deptno order by sal) as next_sal,LEAD(sal,1,0) over(Partition by deptno order by sal) - LAG(sal,1,0) over(Partition by deptno order by sal) as Differnce_between from emp;

/*display next hiredate where hiredate> some date*/
select empno,deptno,job,hiredate, LEAD(hiredate,1, to_date('10-5-1979','dd-mm-yyyy')) over(Partition by deptno order by hiredate) as next_hiredate from emp where hiredate > to_date('01-01-1982','dd-mm-yyyy');



