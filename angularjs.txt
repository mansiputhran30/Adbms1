============ng-directives============
<div ng-app=""> // <div> element is the "owner" of an AngularJS application.
 <p>Name: <input type="text" ng-model="name"></p>   //binds the value of the input field to the application variable name.
 <p ng-bind="name"></p>  // binds the content of the <p> element to the application variable name
</div>

-------ng-init(initializes angularjs app variables)--------
<div ng-app="" ng-init="firstName='John'">
<p>The name is <span ng-bind="firstName"></span></p>
</div>

--------ng-repeat---------
<div ng-app="" ng-init="names=['Jani','Hege','Kai']">
 <ul>
 <li ng-repeat="x in names">  //clones HTML elements once for each item in a collection.
 {{ x }}
 </li>
 </ul>
</div>

##ng-repeat on array of objects

<div ng-app="" ng-init="names=[
{name:'Jani',country:'Norway'},
{name:'Hege',country:'Sweden'},
{name:'Kai',country:'Denmark'}]">
<ul>
 <li ng-repeat="x in names">
 {{ x.name + ', ' + x.country }}
 </li>
</ul>
</div>

============expressions==============
----addition----
<div ng-app="">
 <p>My first expression: {{ 5 + 5 }}</p>
</div>
-----change bg color----
<div ng-app="" ng-init="myCol='cyan'">
<input style="background-color:{{myCol}}" ng-model="myCol">
</div>
------angularjs numbers--------
<div ng-app="" ng-init="quantity=1;cost=5">
<p>Total in dollar: {{ quantity * cost }}</p>
</div>

or 

<div ng-app="" ng-init="quantity=1;price=5">
Quantity: <input type="number" ng-model="quantity">
Costs: <input type="number" ng-model="price">
Total in dollar: {{ quantity * price }}
</div>

##using ng-bind
<div ng-app="" ng-init="quantity=1;cost=5">
<p>Total in dollar: <span ng-bind="quantity * cost"></span></p>
</div>

-------angularjs strings------
<div ng-app="" ng-init="firstName='Flavia';lastName='Gonsalves'">
<p>The name is {{ firstName + " " + lastName }}</p>
</div>
--------angularjs objects-------
<div ng-app="" ng-init="person={firstName:'Flavia',lastName:'Gonsalves'}">
<p>The name is {{ person.lastName }}</p>
</div>
-----------angularjsarrays------
<div ng-app="" ng-init="points=[1,15,19,2,40]">
<p>The third result is {{ points[2] }}</p>
</div>

========Filters============
-------uppercase filter------
<div ng-app="myApp" ng-controller="personCtrl">
<h1>The name is: {{ lastname | uppercase }}</h1>
</div>
<script>
var app = angular.module('myApp', []);
app.controller('personCtrl', function($scope) {
	$scope.firstName = "Flavia",
   	$scope.lastName = "Gonsalves"
});
</script>

------------filter filter------
<div ng-app="myApp" ng-controller="namesCtrl">
        <ul>
            <li ng-repeat="x in names | filter : 'i'">
                {{ x }}
            </li>
        </ul>
    </div>
    <script>
        angular.module('myApp', []).controller('namesCtrl', function($scope) {
            $scope.names = [
                'Jani',
                'Carl',
                'Margareth',
                'Hege',
                'Joe',
                'Gustav',
                'Birgit',
                'Mary',
                'Kai'
            ];
        });
    </script>

------------orderBy filter-----------
<div ng-app="myApp" ng-controller="namesCtrl">
<table border="1" width="100%">
 <tr>
 <th ng-click="orderByMe('name')">Name</th>
 <th ng-click="orderByMe('country')">Country</th>
 </tr>
 <tr ng-repeat="x in names | orderBy:myOrderBy">
 <td>{{x.name}}</td>
 <td>{{x.country}}</td>
 </tr>
</table>
</div>
<script>
angular.module('myApp', []).controller('namesCtrl', function($scope) {
$scope.names = [
 {name:'Jani',country:'Norway'},
 {name:'Carl',country:'Sweden'},
 {name:'Margareth',country:'England'},
 {name:'Hege',country:'Norway'},
 {name:'Joe',country:'Denmark'},
 {name:'Gustav',country:'Sweden'},
 {name:'Birgit',country:'Denmark'},
 {name:'Mary',country:'England'},
 {name:'Kai',country:'Norway'}
 ];
$scope.orderByMe = function(x) {
 $scope.myOrderBy = x;
}
});
</script>

============create your own directive=====

--------invoking as element or attribute-------
<body ng-app="myApp">
<w3-test-directive></w3-test-directive>   //element
<div w3-test-directive></div>    //attribute
<script>
var app = angular.module("myApp", []);
app.directive("w3TestDirective", function() {
 return {
 template : "<h1>Made by a directive!</h1>"
 };
});
</script>
</body>

--------invoking as class-------
<body ng-app="myApp">
<div class="w3-test-directive"></div>
<script>
var app = angular.module("myApp", []);
app.directive("w3TestDirective", function() {
 return {
 restrict : "C",
 template : "<h1>Made by a directive!</h1>"
 };
});
</script>
</body>

--------invoking as comments and restrict it to M(comments)-------
<body ng-app="myApp">
<!-- directive: w3-test-directive -->
<script>
var app = angular.module("myApp", []);
app.directive("w3TestDirective", function() {
 return {
 restrict : "M",
 replace : true,
 template : "<h1>Made by a directive!</h1>"
 };
});
</script>
</body>

==============conditional directives==============
------ng-if------------
<body ng-app="">
Keep HTML: <input type="checkbox" ng-model="myVar" ng-init="myVar = true">
<div ng-if="myVar">
<h1>Welcome</h1>
<p>Welcome to my home.</p>
<hr>
</div>
<p>The DIV element will be removed when the checkbox is not checked.</p>
<p>The DIV element will return, if you check the checkbox.</p>
</body>


==============mouse events directives=============
---------mousedown-------------
<body ng-app="">
    <div ng-mousedown="count = count + 1" ng-init="count=0">Click me!</div>
    <h1>{{count}}</h1>
    <p>This example will increase the value of the variable "count" every time a mouse button is clicked on the DIV element.</p>
</body>

---------mouseenter------------
<body ng-app="">
<div ng-mouseenter="count = count + 1" ng-init="count=0">Click me!</div>
<h1>{{count}}</h1>
<p>This example will increase the value of the variable "count" every time a mouse cursor enters the DIV element.</p>
</body>


==============keyboard events directives=============
<body ng-app="">
    <input ng-keydown="count = count + 1" ng-init="count=0" />
    <h1>{{count}}</h1>
    <p>This example will increase the value of the variable "count" every time a key is pressed in the input field.
    </p>
</body>

=================controllers===============
##basic example
<div ng-app="myApp" ng-controller="myCtrl">
First Name: <input type="text" ng-model="firstName"><br>
Last Name: <input type="text" ng-model="lastName"><br>
<br>
Full Name: {{firstName + " " + lastName}}
</div>
<script>
var app = angular.module('myApp', []);
app.controller('myCtrl', function($scope) {
$scope.firstName = "John";
 $scope.lastName = "Doe";
});
</script>

------------controller methods--------
<div ng-app="myApp" ng-controller="personCtrl">
First Name: <input type="text" ng-model="firstName"><br>
Last Name: <input type="text" ng-model="lastName"><br>
<br>
Full Name: {{fullName()}}
</div>
<script>
var app = angular.module('myApp', []);
app.controller('personCtrl', function($scope) {
$scope.firstName = "John";
 $scope.lastName = "Doe";
 $scope.fullName = function() {
 return $scope.firstName + " " + $scope.lastName;
 };
});
</script>

--------controller in external files---------
<div ng-app="myApp" ng-controller="personCtrl">
First Name: <input type="text" ng-model="firstName"><br>
Last Name: <input type="text" ng-model="lastName"><br>
<br>
Full Name: {{fullName()}}
</div>
<script src="personController.js"></script>
</body>

=================$scope object==============
<div ng-app="myApp" ng-controller="myCtrl">
<h1>{{carname}}</h1>
</div>
<script>
var app = angular.module('myApp', []);
app.controller('myCtrl', function($scope) {
 $scope.carname = "Volvo";
});
</script>

##

<div ng-app="myApp" ng-controller="myCtrl">
<input ng-model="name">
<h1>My name is {{name}}</h1>
</div>
<script>
var app = angular.module('myApp', []);
app.controller('myCtrl', function($scope) {
 $scope.name = "John Doe";
});
</script>


================root scope================

<body ng-app="myApp">
    <p>The rootScope's favorite color:</p>
    <h1>{{color}}</h1>
    <div ng-controller="myCtrl">
        <p>The scope of the controller's favorite color:</p>
        <h1>{{color}}</h1>
    </div>
    <p>The rootScope's favorite color is still:</p>
    <h1>{{color}}</h1>
    <script>
        var app = angular.module('myApp', []);
        app.run(function($rootScope) {
            $rootScope.color = 'blue';
        });
        app.controller('myCtrl', function($scope) {
            $scope.color = "red";
        });
    </script>
</body>

===============behavior to scope==========
<body ng-app="myApp">
<div ng-controller="DoubleController">
 Two times <input ng-model="num"> equals {{ double(num) }}
</div>
<script>
var myApp = angular.module('myApp',[]);
myApp.controller('DoubleController', ['$scope', function($scope) {
 $scope.double = function(value) { return value * 2; };
}]);
</script>
</body>

============passing parameters to the methods=========

<script>
    var app = angular.module('app', []);
    app.controller('myController', ['$scope', function($scope) {
        $scope.Language = 'Hindi';
        $scope.Preference = function(lang) {
            $scope.Language = lang;
        };
        $scope.Preference1 = function(lang, lang1) {
            $scope.Language = lang;
            $scope.Language1 = lang1;
        };
    }]);
</script>
</head>

<body>
    <h2>Attach functions or behavior - AngularJS</h2>
    <div ng-app="app" ng-controller="myController">
        Click
        <button ng-click="Preference('English')">English</button>
        <button ng-click="Preference('Hindi')">Hindi</button>
        <button ng-click="Preference('Spanish')">Spanish</button>
        <button ng-click="Preference1('French', ' and Hindi language
   also.')">French</button>
        <p>I like {{ Language}} language {{ Language1 }} </p>
    </div>
</body>


===================ng-repeat with controller=================

<div ng-app="myApp" ng-controller="myCtrl">
<ul>
 <li ng-repeat="x in names">{{x}}</li>
</ul>
</div>
<script>
var app = angular.module('myApp', []);
app.controller('myCtrl', function($scope) {
 $scope.names = ["Emil", "Tobias", "Linus"];
});
</script>

===============Angular Forms==========
----------selectbox--------------
<body ng-app="">
    <form>
        Select a topic:
        <select ng-model="myVar">
     <option value="">
     <option value="dogs">Dogs
     <option value="tuts">Tutorials
     <option value="cars">Cars
     </select>
    </form>
    <div ng-switch="myVar">
        <div ng-switch-when="dogs">
            <h1>Dogs</h1>
            <p>Welcome to a world of dogs.</p>
        </div>
        <div ng-switch-when="tuts">
            <h1>Tutorials</h1>
            <p>Learn from examples.</p>
        </div>
        <div ng-switch-when="cars">
            <h1>Cars</h1>
            <p>Read about cars.</p>
        </div>
    </div>
    <p>The ng-switch directive hides and shows HTML sections depending on the value of the dropdown list.</p>
</body>

-----------------Input Validations---------

//required
<body ng-app="">
    <form name="myForm">
        <input name="myInput" ng-model="myInput" required>
    </form>
    <p>The input's valid state is:</p>
    <h1>{{myForm.myInput.$valid}}</h1>
</body>

//email
<form name="myForm">
 <input name="myInput" ng-model="myInput" type="email">
</form>
<p>The input's valid state is:</p>
<h1>{{myForm.myInput.$valid}}</h1>

//validation form
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
    <style>
        input.ng-invalid {
            background-color: rgb(190, 169, 169);
            color: rgb(238, 237, 237);
        }
        
        input.ng-valid {
            background-color: rgb(255, 255, 255);
            color: rgb(0, 0, 0);
        }
        
        span {
            color: rebeccapurple;
        }
        
        form {
            /* display: flex; */
            justify-content: top-center;
            /* align-items: center; */
            flex-direction: column;
            width: 100%;
            height: 80%;
        }
    </style>
    <title>Document</title>
</head>

<body>
    <h1 style="text-align: center;">Student Registration Form</h1>
    <div ng-app="mainApp" ng-controller="studentController">
        <form style="text-align: center;" name="studentForm">
            <table border="3" align="center">
                <thead>Please fill up the form!</thead>
                <tr>
                    <td>First Name</td>
                    <td><input type="text" name="firstname" ng-model="firstname" required ng-minlength="4" ng-pattern="/[a-zA-Z]$/">
                        <span ng-show="studentForm.firstname.$error.required">First Name is required!
</span>
                        <span ng-show="studentForm.firstname.$error.pattern">Only Alphabets are allowed!
</span>
                        <span ng-show="studentForm.firstname.$error.minlength">Minimum 4
characters</span>
                    </td>
                </tr>
                <tr>
                    <td>Last Name</td>
                    <td><input type="text" name="lastname" ng-model="lastname" required>
                        <span ng-show="studentForm.lastname.$error.required">Last Name is required!
</span>
                    </td>
                </tr>
                <tr>
                    <td>Email Id</td>
                    <td><input type="email" name="emailid" ng-model="emailid" required>
                        <span ng-show="studentForm.emailid.$error.required">Email Id is required!</span>
                    </td>
                </tr>
                <tr>
                    <td>Age</td>
                    <td><input type="text" name="age" ng-model="age" required ng-pattern="/[0-9]$/">
                        <span ng-show="studentForm.age.$error.required">Age is required!</span>
                        <span ng-show="studentForm.age.$error.pattern">Age should be numeric!</span>
                    </td>
                </tr>
            </table>
            <br><br>
            <button name="submit" ng-disabled="studentForm.firstname.$invalid || studentForm.lastname.$invalid ||
            studentForm.emailid.$invalid || studentForm.age.$invalid" ng-click="submit()">Submit</button>
            <button name="reset" ng-click="reset()">Reset</button>
            <br><br><br>
            <div ng-show="showme">
                Student Name: {{firstname+" "+lastname}}
                <br> Email Id: {{emailid}}
                <br> Age: {{age}}
                <br>
            </div>
        </form>
    </div>
    <script>
        var mainApp = angular.module('mainApp', []);
        mainApp.controller('studentController',
            function($scope) {
                $scope.showme = false;
                $scope.reset = function() {
                    $scope.firstname = "";
                    $scope.lastname = "";
                    $scope.emailid = "";
                    $scope.age = 0;
                    $scope.showme = false;
                }
                $scope.submit = function() {
                    alert($scope.firstname + " Details successfully Submitted!")
                    $scope.showme = true;
                }
            });
    </script>
</body>
</html>

---------bg color change for input field---------------
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
    <style>
        input.ng-invalid {
            background-color: pink;
        }
        
        input.ng-valid {
            background-color: lightgreen;
        }
    </style>

    <body ng-app="">
        <p>Try writing in the input field:</p>
        <form name="myForm">
            <input name="myName" ng-model="myName" required>
        </form>
        <p>The input field requires content, and will therefore become green when you write in it.</p>
    </body>

</html>

----------------checkbox form--------------
<body>
<div ng-app="" >
<form name="personForm">
<h3>Customer Registration Form</h3>
<table>
<tr>
<td>Full Name</td>
<td><input type="text" name="fullname" ng-model="fullname" required ng-pattern="/
[a-zA-Z]$/">
<span ng-show="personForm.fullname.$error.required">Name is required!</span>
<span ng-show="personForm.fullname.$error.pattern">Only Alphabets are allowed!
</span>
</td>
</tr>
<tr>
<td>Address</td>
<td><textarea type="text" name="address" ng-model="address" required ngpattern="/[a-zA-Z]$/" rows="3" cols="25"></textarea>
<span ng-show="personForm.address.$error.required">Address is required!</span>
<span ng-show="personForm.address.$error.pattern">Only Alphabets are allowed!
</span>
</td>
</tr>
<tr>
<td>Contact No.</td>
<td><input type="number" name="phoneno" ng-model="phoneno" required ng-pattern="/
[0-9]$/" ng-minlength="10" ng-maxlength="10">
<span ng-show="personForm.phoneno.$error.required">Contact no is required!
</span>
<span ng-show="personForm.phoneno.$error.pattern">Only Numbers are allowed!
</span>
<span ng-show="personForm.phoneno.$error.minlength">Contact no. should be of 10
characters</span>
<span ng-show="personForm.phoneno.$error.maxlength">Contact no. should be of 10
characters</span>
</td>
</tr>
<tr>
<td>
<input type="checkbox" name="terms" ng-model="terms" required>
I agree to the terms and conditions.
</td>
<td>
<span style="color: red;" ng-hide="terms">
You have to agree to the terms and conditions.
</span>
</td>
</tr>
</table>
<button type="submit" ng-disabled="personForm.fullname.$invalid">
Submit
</button>
</form>
</div>
</body>

----------------likes dislikes-------------------
<link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.noicons.min.css"
rel="stylesheet">
<link href="//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css"
rel="stylesheet">
<script
src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body ng-app="" ng-init="beverages=['Thumbsup','Pepsi','SevenUp','Sprite']" style="textalign: center;">
<h3>MY COLD DRINKS CENTRE</h2>
<hr>
<table style="margin-left: auto;margin-right: auto;background-color: #ebd286;"
border="4">
<tr>
<th>Beverage Name</th>
<th>Like Button</th>
<th>Disike Button</th>
<th>No. of likes</th>
<th>No. of dislikes</th>
</tr>
<tr ng-repeat="x in beverages">
<td>{{x}}</td>
<td style="text-align: center;"><button style="color: beige;background-color: black;"
ng-click="countlk = countlk + 1" ng-init="countlk=0"><i class="iconsmile"></i></button></td>
<td style="text-align: center;"><button style="color: beige;background-color: black;"
ng-click="countdslk = countdslk + 1" ng-init="countdslk=0"><i class="iconfrown"></i></button></td>
<td>{{countlk}}</td>
<td>{{countdslk}}</td>
</tr>
</table>
</body>

-----------ng-model-options-------------
<body style="text-align: center;">
<h3 style="color: brown;">ng-model-options Directive</h3>
<div ng-app="myApp" ng-controller="myCtrl">
<p>Enter some text: </p>
<textarea ng-model="name" ng-model-options="{
updateOn: 'blur',
debounce: 1000,
allowInvalid: true
}" ng-pattern="/[a-zA-Z]{3,15}$/" rows="3" cols="50">
</textarea>
<p>
The binding is going to wait for the value until the focus of the field is lost:
</p>{{name}}
</div>
<script>
var app=angular.module('myApp',[]);
app.controller('myCtrl', function($scope){
$scope.name = "Welcome to Angular JS"
});
</script>
</body>

-----------------custom validation-own directive-------------
<form name="myForm">
<input name="myInput" ng-model="myInput" required my-directive>
</form>
<script>
var app = angular.module('myApp', []);
app.directive('myDirective', function() {
 return {
 require: 'ngModel',
 link: function(scope, element, attr, mCtrl) {
 function myValidation(value) {
 if (value.indexOf("e") > -1) {
 mCtrl.$setValidity('charE', true);
 } else {
 mCtrl.$setValidity('charE', false);
 }
 return value;
 }
 mCtrl.$parsers.push(myValidation);
 }
};
});
</script>

========================Form Controls=======================================
A. Create a application which allows to add or remove names
from names Array
B. Create application to calculate mobile bill based on following
condition 0-200 No charges only rental of Rs 200 Between 200-
500 1 per call Above 500 2 per call if calls 600 Bill amt = 200 +
(600-200)* 1 + (600-500)*2 =700
C. Create Registration form using input box check box radio
buttons drop down listbox and display appropriate messages

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Document</title>
<script
src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body>
<script>
var app = angular.module("myNameList", []);
app.controller("myCtrl",function($scope){
$scope.names=[];
$scope.addItem = function(){
$scope.names.push($scope.addMe);
}
$scope.removeItem = function(x)
{
$scope.names.splice(x,1);
}
});
</script>
<div ng-app="myNameList" ng-controller="myCtrl">
<ul>
<li ng-repeat="x in names">
{{x}}
<span ng-click="removeItem($index)">
x
</span>
</li>
<input ng-model="addMe">
<button ng-click="addItem()">
Add
</button>
</ul>
</div>
<p>Please click on x to remove the item from list</p>
</body>
</html>

------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Document</title>
<script
src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body>
<script>
var app=angular.module("myBill", []);
app.controller("myCtrl",function($scope)
{
$scope.amt=200;
$scope.calculate=function(calls)
{
if(calls>200 && calls<=500)
$scope.amt+=(calls-200)*1;
if(calls>500)
$scope.amt=200+300*1+(calls-500)*2;
}
});
</script>
<div ng-app="myBill" ng-controller="myCtrl">
No. of calls
<input type="number" ng-model="calls">
<button ng-click="calculate(calls)">
Calculate
</button>
<p>Bill amount: {{amt}}</p>
</div>
</body>
</html>

--------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Document</title>
<script
src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body ng-app="">
<form>
Check to show Header
<input type="checkbox" ng-model="myVar">
<h1 ng-if="myVar">Resume</h1>
<hr>
<input type="text" ng-model="fullName">
<br>
Name: {{fullName}}
<hr>
Qualification
<select ng-model="mqual">
<option value=""></option>
<option value="BSc IT">BSc IT</option>
<option value="BCom">BCom</option>
</select>
<div ng-switch="mqual">
<div ng-switch-when="">
<h2>Please select</h2>
</div>
<div ng-switch-when="BSc IT">
<h2>Your Qualification is {{mqual}}</h2>
</div>
<div ng-switch-when="BCom">
<h2>Your Qualification is {{mqual}}</h2>
</div>
</div>
<hr>
<input type="radio" value="Male" ng-model="gender">Male
<input type="radio" value="Female" ng-model="gender">Female
<input type="radio" value="Others" ng-model="gender">Others
<div ng-switch="gender">
<div ng-switch-when="Male">
<h2>You are {{gender}}</h2>
</div>
<div ng-switch-when="Female">
<h2>You are {{gender}}</h2>
</div>
<div ng-switch-when="Others">
<h2>You belong to {{gender}}</h2>
</div>
</div>
</form>
</body>
</html>
