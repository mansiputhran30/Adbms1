=========Modules==============
--------Include Module----------
require-
##blocking code
var fs = require("fs");
var data = fs.readFileSync('input.txt');
console.log(data.toString());
console.log("Program Ended");

##non-blocking code
var fs = require("fs");

fs.readFile('input.txt', function (err, data) {
 if (err) return console.error(err);
 console.log(data.toString());
});
console.log("Program Ended"); 

=========Events==============
------Event Emitter---------
// step 1 importing event
const events = require("events");
// step 2 creating an Event emitter object
const eventEmitter = new events.EventEmitter();
//write a function of event 1
function listner1() {
    console.log("Event received by Listener 1");
}
//write a function of event 2
function listner2() {
    console.log("Event received by Listener 2");
}
// step 3 adding listener through addlistener or on
eventEmitter.addListener("write", listner1);
eventEmitter.on("write", listner2);
// step 4 emitting event
eventEmitter.emit("write");
console.log(eventEmitter.listenerCount("write"));
// step 5 removing listener
eventEmitter.removeListener("write", listner1);
console.log("Listener 1 is removed");
eventEmitter.emit("write");
console.log(eventEmitter.listenerCount("write"));
console.log("Program Ended");


===========Http request Handling==================
var http = require('http'); // Import Node.js core module
var server = http.createServer(function(req, res) { //create web server
    if (req.url == '/') { //check the URL of the current request

        // set response header
        res.writeHead(200, { 'Content-Type': 'text/html' });

        // set response content
        res.write('<h1>This is Home Page</h1>');
        res.end();

    } else if (req.url == "/student") {

        res.writeHead(200, { 'Content-Type': 'text/html' });
        res.write('<h1>This is Student Page</h1>');
        res.end();

    } else if (req.url == "/admin") {

        res.writeHead(200, { 'Content-Type': 'text/html' });
        res.write('<h1>This is Admin Page</h1>');
        res.end();

    } else
        res.end('Invalid Request!');
});
server.listen(8080); //6 - listen for any incoming requests
console.log('Node.js web server at port 5000 is running..')

===========File Handling==================

#reading file asynchronously.
var fs = require('fs');
fs.readFile('TestFile.txt', function (err, data) {
 if (err) throw err;
 console.log(data);
});

#reading file synchronously.
var fs = require('fs');
var data = fs.readFileSync('dummyfile.txt', 'utf8');
console.log(data);

##creating and writing file
var fs = require('fs');
fs.writeFile('test.txt', 'Hello World!', function (err) {
 if (err)
 console.log(err);
 else
 console.log('Write operation complete.');
});

##appending file content
var fs = require('fs');
fs.appendFile('test.txt', 'Hello World!', function (err) {
 if (err)
 console.log(err);
 else
 console.log('Append operation complete.');
});

##open and read
var fs = require('fs');
fs.open('TestFile.txt', 'r', function (err, fd) {

 if (err) {
return console.error(err);
 }

 var buffr = new Buffer(1024);

 fs.read(fd, buffr, 0, buffr.length, 0, function (err, bytes) {

 if (err) throw err;

 // Print only read bytes to avoid junk.
if (bytes > 0) {
 console.log(buffr.slice(0, bytes).toString());
 }

 // Close the opened file.
 fs.close(fd, function (err) {
 if (err) throw err;
 });
 });
});

##delete file
var fs = require('fs');
fs.unlink('input.txt', function() {

    console.log('delete operation complete.');
});

==============Database====================
-------------dbconnect and create database----------------
var mysql = require('mysql');
var con = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: ""
});
con.connect(function(err) {
    if (err) throw err;
    console.log("Connected");
    con.query("CREATE DATABASE customer", function(err, result) {
        if (err) throw err;
        console.log("Database created");
    });
});

-----------create table-------------
var mysql = require('mysql');
var con = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "",
    database: "customer"
});
con.connect(function(err) {
    if (err) throw err;
    console.log("Connected!");
    var sql = "CREATE TABLE customer (custid int primary key, name VARCHAR(255),address VARCHAR(255))";
    con.query(sql, function(err) {
        if (err) throw err;
        console.log("Table created");
    });
});

---------insert record--------

var sql = "INSERT INTO customer values (101,'Geetika Naidu','Goregaon East')”;
con.query(sql, function(err)
{
if(err) throw err;
console.log("Value Inserted in customer table”);
});

--------insert multiple records--------
var sql = "INSERT INTO customer(custid,name,address) values ?"
let custdata =[
[102,'Sejal Desai','Vasai'],
[103,'Sheetal Singh','Bandra'],
[104,'Mansi Puthran','Mira Road']
];
con.query(sql,[custdata], (err,results) =>
{
if(err) throw err;
console.log("Rows inserted: "+results.affectedRows);
});

--------alter table structure(create primary key on existing table)-----------

var sql = "ALTER TABLE customers ADD COLUMN id INT AUTO_INCREMENT PRIMARY KEY";
 con.query(sql, function (err, result) {
 if (err) throw err;
 console.log("Table altered");
});

-----------select all records--------------
con.connect(function(err) {
 if (err) throw err;
 con.query("SELECT * FROM customers", function (err, result, fields) {
 if (err) throw err;
 console.log(result);
});

-----------update record----------------
var sql = "UPDATE customer SET address = 'Goregaon West' where address = 'Bandra'";
con.query(sql,function(err,results)
{
if(err) throw err;
console.log(results.affectedRows+" record(s) updated");
});

----------delete record-------------

var sql = "DELETE FROM customers WHERE address = 'Mountain 21'";
 con.query(sql, function (err, result) {
 if (err) throw err;
 console.log("Number of records deleted: " + result.affectedRows);
});







===============Praticals of node js========================
========basics===========
function Add(x, y) {
    return (x + y);
}

function Sumbetween(x, y) {
    sum = 0;
    for (i = x; i <= y; i++) {
        sum = sum + i;
    }
    return sum;
}

function factorial(n) {
    fact = 1;
    if (n == 0 || n == 1) {
        return fact;
    } else {
        for (i = 2; i <= n; i++) {
            fact = fact * i;
        }
        return fact;
    }
}

num1 = 10;
num2 = 20;
console.log("Addition of " + num1 + " and " + num2 + " is: " + Add(num1, num2));
console.log("Sum from 1 to 5 is: " + Sumbetween(1, 5));
console.log("Factorial of 3 is " + factorial(3));

=============swich case==================
function Add(x, y) {
    return (x + y);
}

function Sub(x, y) {
    return (x - y);
}

function Mul(x, y) {
    return (x * y);
}

function Div(x, y) {
    return (x / y);
}

num1 = 36;
num2 = 12;

op = '/';
switch (op) {
    case '+':
        console.log("Addition of " + num1 + " and " + num2 + " is: " + Add(num1, num2));
        break;

    case '-':
        console.log("Subtraction of " + num1 + " and " + num2 + " is: " + Sub(num1, num2));
        break;

    case '*':
        console.log("Multiplication of " + num1 + " and " + num2 + " is: " + Mul(num1, num2));
        break;

    case '/':
        console.log("Division of " + num1 + " and " + num2 + " is: " + Div(num1, num2));
        break;

    default:
        break;
}

============creating your own modules===========
module.exports.palindrome = function(str) {
    var rev = "";
    str = str.toString();
    for (var i = str.length; i >= 0; i--) {
        rev = rev + str.charAt(i);
    }
    if (rev == str) {
        return (str + " is a palindrome");
    } else {
        return (str + " is not a palindrome");
    }
}

module.exports.armstrong = function(num) {
    var temp = num;
    var sum = 0;
    while (temp > 0) {
        sum = sum + Math.pow(temp % 10, 3);
        temp = parseInt(temp / 10);
    }
    if (sum == num) {
        return (num + " is an armstrong number");
    } else {
        return (num + " is not an armstrong number");
    }
}

module.exports.sumofdigits = function(num) {
    var temp = num;
    var sum = 0;
    while (temp > 0) {
        sum = sum + temp % 10;
        temp = parseInt(temp / 10);
    }
    return ("Sum of digitis of number " + num + " is: " + sum);
}

---use the above module----
var p = require('./functions.js');

var str = "eyx";
console.log(p.palindrome(str));

var num = 53;
console.log(p.armstrong(num));

var num = 49;
console.log(p.sumofdigits(num));

==============event emitter handling events==========
var e=require('events');
var event= new e.EventEmitter();
function CreateFile(){
console.log("Creating a file");
}
function Read(){
console.log("Reading a file");
}
function Write(){
console.log("Writing a file");
}
event.addListener("IOoperations",Write);
event.addListener("IOoperations",Read);
event.emit("IOoperations");
console.log(event.rawListeners("IOoperations"));
console.log(event.listenerCount("IOoperations"));
event.removeListener("IOoperations",Read);
console.log(event.rawListeners("IOoperations"));
event.emit("IOoperations");
console.log(event.listenerCount("IOoperations"));
event.once("CreateIO",CreateFile);
event.emit("CreateIO");
console.log(event.listenerCount("CreateIO"));
console.log("Creating Again");
event.emit("CreateIO");

================event chaining===================

var e=require('events');
const { emit } = require('process');
var event= new e.EventEmitter();
function Tea(){
console.log("Making Tea");
event.emit("gason");
}
event.addListener("tea",Tea);
function gason(){
console.log("Put the gas on.. ");
event.emit("boilwater");
}
event.addListener("gason",gason);
function boilwater(){
console.log("let the water boiler on");
event.emit("addtea");
}
event.addListener("boilwater",boilwater);
function addtea(){
console.log("Adding tea leaves in the water");
event.emit("milkandsugar");
}
event.addListener("addtea",addtea);
function milkandsugar(){
console.log("Adding milk and sugar");
}
event.addListener("milkandsugar",milkandsugar);
event.emit("tea");

===========Use callback and set timeout to write a calculate function with callback function===========

var calculate=function(x,y,display)
{
sum=x+y;
setTimeout(function(){display(sum);},5000);
console.log("Leaving...");
//function call leaves this block
}
calculate(5,10,function(res)//function defined here is display function
{
//wait for display function to be called
console.log("sum "+ res);
console.log("Program ends");
//call leaves from here without waiting fo the function
});
//call comes here and prints the following
console.log("Doing something else....");
console.log("Please wait.....");


================Demonstrate SetTimeout SetInterval clearTimeout and ClearInterval=============
i=0;
var inter=setInterval(function(){
++i;
console.log("Hello There "+i);
if(i==10) clearInterval(inter);
},5000);
var t=setTimeout(function(){
console.log("Time Out Example");
},2000);
//clearTimeout(t);
console.log("Program is running!");
process.nextTick(function(){console.log("Urgent Task");});
